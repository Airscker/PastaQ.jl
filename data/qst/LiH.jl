using ITensors
using PastaQ
using Random
using HDF5

interactions = [
  -8.021856357086737, -0.09275994933497596, -0.002941141087356501, 0.002941141087356501, -0.21188984297008667, 0.000742799639473676, 
  -0.000742799639473676, 0.01938940858369162, 0.01938940858369162, 0.36525869021603813, 0.002941141087356504, 0.002941141087356504, 
  0.0927599493349758, -0.0007427996394736847, 0.0007427996394736847, -0.21188984297008662, -0.019389408583691623, 0.019389408583691623, 
  -0.36525869021603813, -0.12274244052543466, 0.03239529731985151, -0.03239529731985151, 0.01192552928451655, -0.01192552928451655, 
  0.01192552928451655, 0.01192552928451655, -0.008499158469825527, -0.008499158469825527, 0.008499158469825527, 0.008499158469825527, 
  -0.0031394823755130194, -0.0031394823755130194, 0.0031394823755130194, 0.0031394823755130194, 0.03239529731985151, -0.03239529731985151, 
  -0.008499158469825529, 0.008499158469825529, 0.008499158469825529, -0.008499158469825529, -0.03084609696326519, 0.03084609696326519, 
  0.03084609696326519, -0.03084609696326519, 0.05628878167218357, 0.00169746496239832, -0.00169746496239832, 0.0027372506123200615, 
  -0.0027372506123200615, 0.012779333033033186, -0.012779333033033186, -0.002221610808160491, 0.002221610808160491, 0.002221610808160491, 
  -0.002221610808160491, -0.007859003265910392, 0.007859003265910392, 0.007859003265910392, -0.007859003265910392, 0.11395251883045998, 
  -0.010681856282959954, 0.010681856282959954, -0.034389748140469446, 0.034389748140469446, -0.05628878167218357, -0.012779333033033186, 
  -0.012779333033033186, -0.00169746496239832, -0.00169746496239832, 0.0022216108081604905, 0.0022216108081604905, 0.0022216108081604905, 
  0.0022216108081604905, -0.0027372506123200615, 0.0027372506123200615, 0.007859003265910394, -0.007859003265910394, 0.007859003265910394, 
  -0.007859003265910394, 0.08460131391823561, -0.009002501243838463, -0.009002501243838463, -0.009002501243838463, 0.009002501243838463, 
  -0.0065875841900658524, 0.0065875841900658524, -0.0065875841900658524, 0.0065875841900658524, 0.06044012857316576, 0.010952773573815511, 
  0.010952773573815511, 0.11395251883045998, -0.010681856282959954, -0.010681856282959954, -0.034389748140469446, 0.034389748140469446, 
  -0.06044012857316576, -0.010952773573815511, 0.010952773573815511, -0.11384335176464011]

paulis = [
  "IIII","ZIII","XZII","XIII","ZZII","YYII","XXII","ZXII","IXII","IZII","IIXZ","IIXI","IIZI","IIXX","IIYY","IIZZ","IIZX", 
  "IIIX","IIIZ","ZIZI","XXZI","YYZI","XZZI","XIZI","ZIXI","ZIXZ","XXXI","XXXZ","YYXI","YYXZ","XZXI","XZXZ","XIXI","XIXZ", 
  "ZIYY","ZIXX","XZYY","XZXX","XIYY","XIXX","XXYY","XXXX","YYYY","YYXX","ZIZZ","XZZZ","XIZZ","XXZZ","YYZZ","ZIIX","ZIZX", 
  "XZIX","XZZX","XIIX","XIZX","XXIX","XXZX","YYIX","YYZX","ZIIZ","XZIZ","XIIZ","XXIZ","YYIZ","ZZZI","ZXZI","IXZI","ZZXI", 
  "ZZXZ","ZXXI","ZXXZ","IXXI","IXXZ","ZZYY","ZZXX","ZXYY","ZXXX","IXYY","IXXX","ZZZZ","ZXZZ","IXZZ","ZZIX","ZZZX","ZXZX", 
  "ZXIX","IXZX","IXIX","ZZIZ","ZXIZ","IXIZ","IZZI","IZXI","IZXZ","IZYY","IZXX","IZZZ","IZIX","IZZX","IZIZ"] 

Random.seed!(1234)

N = 4

sites = siteinds("S=1/2",N)

ampo = AutoMPO()
cl_energy = interactions[1]

for k in 2:length(paulis)
  pauli = paulis[k]
  term = []
  push!(term,interactions[k])
  prefactor = 1.0
  for j in 1:N
    if pauli[j] == 'X'
      push!(term,"Sx")
      push!(term,j)
      prefactor = prefactor * 2.0
    elseif pauli[j] == 'Y'
      push!(term,"Sy")
      push!(term,j)
      prefactor = prefactor * 2.0
    elseif pauli[j] == 'Z'
      push!(term,"Sz")
      push!(term,j)
      prefactor = prefactor * 2.0
    end
  end
  term[1] = term[1] * prefactor
  term = Tuple(term)
  println(term)
  ampo .+= term
end

H = MPO(ampo,sites)

psi0 = randomMPS(sites)

sweeps = Sweeps(10)
maxdim!(sweeps, 10,20,100,100,200)
cutoff!(sweeps, 1E-10)

energy, psi = dmrg(H,psi0, sweeps)
energy = energy + cl_energy
println("Final energy = $energy")

nshots = 50000

println("Generating data...")
bases = generatemeasurementsettings(N,nshots,bases_id=["X","Y","Z"])
samples = Matrix{Int64}(undef, nshots, N)

for n in 1:nshots
  meas_gates = makemeasurementgates(bases[n,:])
  meas_tensors = compilecircuit(psi,meas_gates)
  psi_out = runcircuit(psi,meas_tensors)
  samples[n,:] = measure(psi_out,1)
end

output_path = "data_LiH_N$(N).h5"
h5open(output_path, "w") do file
  write(file,"samples",samples)
  write(file,"bases",bases)
  write(file,"psi",psi)
end

